// Generated by CoffeeScript 1.10.0
var GameServer, config, gameServer, pod, server,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

server = require('../../../../../src/server/server.coffee');

config = {
  pod: {
    id: server.Utils.guid(),
    dirname: __dirname,
    version: 1,
    port: 1337
  },
  gameServer: {
    ticksPerSecond: 50,
    ioMethods: ['position', 'rotateHead', 'shoot']
  }
};

GameServer = (function(superClass) {
  extend(GameServer, superClass);

  function GameServer() {
    return GameServer.__super__.constructor.apply(this, arguments);
  }

  GameServer.prototype.position = function(socket, data) {
    return pod.broadcast('position', data);
  };

  GameServer.prototype.rotateHead = function(socket, data) {
    return pod.broadcast('rotateHead', data);
  };

  GameServer.prototype.shoot = function(socket, data) {
    return pod.broadcast('shoot', data);
  };

  return GameServer;

})(server.GameServer);

gameServer = new GameServer(config.gameServer);

pod = new server.Pod(config.pod, gameServer);

pod.listen();
